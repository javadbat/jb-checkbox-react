'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var mobx = require('mobx');
var mobxReact = require('mobx-react');
require('./JBCheckBox.css');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }
var JBCheckBoxService =
function () {
  function JBCheckBoxService(props) {
    _classCallCheck(this, JBCheckBoxService);
    this.JBCheckBoxComponentDom = null;
    this.props = mobx.observable(props);
  }
  _createClass(JBCheckBoxService, [{
    key: "onClick",
    value: function onClick() {
      var _this = this;
      var value = !this.props.value;
      var event = new CustomEvent("change", {
        detail: {
          oldValue: this.props.value,
          newValue: value
        },
        bubbles: true,
        cancelable: true
      });
      event.simulated = true;
      var tracker = this.JBCheckBoxComponentDom._valueTracker;
      if (tracker) {
        tracker.setValue(value);
      }
      this.JBCheckBoxComponentDom.value = value;
      this.JBCheckBoxComponentDom.onchange = function (e) {
        return _this.props.onChange(e);
      };
      this.JBCheckBoxComponentDom.dispatchEvent(event);
    }
  }]);
  return JBCheckBoxService;
}();

var _class;
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
var JBCheckBox = mobxReact.observer(_class =
function (_React$Component) {
  _inherits(JBCheckBox, _React$Component);
  function JBCheckBox(props) {
    var _this;
    _classCallCheck$1(this, JBCheckBox);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(JBCheckBox).call(this, props));
    _this.service = new JBCheckBoxService(props);
    return _this;
  }
  _createClass$1(JBCheckBox, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.value != nextProps.value) {
        this.service.props.value = nextProps.value;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var renderDom = React.createElement("div", {
        className: "jb-check-box-component-wrapper",
        ref: function ref(dom) {
          _this2.service.JBCheckBoxComponentDom = dom;
        },
        style: this.props.style
      }, React.createElement("div", {
        className: "svg-wrapper",
        onClick: function onClick(e) {
          return _this2.service.onClick(e);
        }
      }, React.createElement("svg", {
        className: "check-box-svg " + (this.service.props.value ? 'active' : ''),
        viewBox: "0 0 52 52"
      }, React.createElement("defs", null, React.createElement("filter", {
        xmlns: "http://www.w3.org/2000/svg",
        id: "dropshadow",
        height: "150%"
      }, React.createElement("feGaussianBlur", {
        in: "SourceAlpha",
        stdDeviation: "7"
      }), React.createElement("feOffset", {
        dx: "0",
        dy: "0",
        result: "offsetblur"
      }), React.createElement("feComponentTransfer", null, React.createElement("feFuncA", {
        type: "linear",
        slope: "0.9"
      })), React.createElement("feMerge", null, React.createElement("feMergeNode", null), React.createElement("feMergeNode", {
        in: "SourceGraphic"
      })))), React.createElement("rect", {
        className: "checkmark__cube",
        x: "0",
        y: "0",
        width: "52",
        height: "52",
        rx: "5",
        ry: "5"
      }), React.createElement("path", {
        className: "checkmark__check",
        fill: "none",
        d: "M14.1 27.2l7.1 7.2 16.7-16.8"
      }))), React.createElement("div", {
        className: "caption " + (this.service.props.value ? 'active' : '')
      }, this.service.props.title ? this.service.props.title : ''));
      return renderDom;
    }
  }]);
  return JBCheckBox;
}(React.Component)) || _class;

module.exports = JBCheckBox;
